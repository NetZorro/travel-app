{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "react-hooks",
    "import"
  ],
  "extends": [
    "eslint:recommended",

    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],

  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
    // use <root>/tsconfig.json
    "typescript": {
       // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
      "alwaysTryTypes": true,
       // use <root>/path/to/folder/tsconfig.json
      "project": "./"
    }

  }
},
  "rules": {
    // turn on errors for missing imports
    //"import/no-unresolved": "error",
    "import/no-unresolved": [2, {"commonjs": true, "amd": true}],
    "import/named": 2,
    "import/namespace": 2,
    "import/default": 2,
    "import/export": 2,
     // Проверяем правила хуков
    "react-hooks/rules-of-hooks": "error",
     // Проверяем зависимости эффекта
    "react-hooks/exhaustive-deps": "warn",
 
  "import/order": [
    "error",
    {
      "groups": ["builtin", "external", "internal"],
      "pathGroups": [
        {
          "pattern": "react",
          "group": "external",
          "position": "before"
        }
      ],
      "pathGroupsExcludedImportTypes": ["react"],
      "newlines-between": "always",
      "alphabetize": {
        "order": "asc",
        "caseInsensitive": true
      }
    }
  ]
 }
}